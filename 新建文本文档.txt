/opt/tuniu/apache2/bin/apachectl restart linux下apache重启的命令

流量本身就是钱，导到那里都是赚钱，为什么要导到你那边呢

创业的时候要多用产品的思维去想而不是程序员的思维

JS只能输入正整数<input id="lowPrice" class="priTxt" type="text" method="lowPrice" onkeyup="if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\D/g,'')}">
input 绑定 onkeyup 和 change 函数
$('input#thisnum').keyup(function() {}
$('input#thisnum').change(function() {}

JS函数的默认值
function simue (){
  var a = arguments[0] ? arguments[0] : 1;
  var b = arguments[1] ? arguments[1] : 2;
  return a+b;
}
alert( simue() ); //输出3
alert( simue(10) ); //输出12
alert( simue(10,20) ); //输出30

验证正整数
function checkRate(input)  
{
     var re = /^[1-9]+[0-9]*]*$/；  

     if (!re.test(input.rate.value))  
    {  
        alert("请输入正整数");  
        input.rate.focus();  
        return false;  
     }  
}
整数
function checkRate(input)  
{
     var re = /^[0-9]+.?[0-9]*$/;         
     if (!re.test(input.rate.value))  
    {  
        alert("请输入数字(例:0.02)");  
        input.rate.focus();  
        return false;  
     }  
}  


业务增长，给你的网站带来用户和流量，那随之机器负载就上去了，要不要做监控？要不要做负载均衡？
用户复杂了，要不要做多浏览器兼容？要不要做CDN？数据量大了，要不要做分布？垂直分还是横向分？
系统瓶颈在哪里？优化IO还是优化网络？整个系统复杂度上去了，成本怎么降低？你的能力在哪里？
收入不变，算法优化一下成本降低20%，老板高不高兴？给不给你加工资？成本类的潜力挖掘殆尽，那收入类的挖掘完了没有？
我们知不知道用户喜欢我们网站上的什么功能？用户喜欢的是不是有价值的？这些有价值的我们能不能做？统计，分析，转化，挖掘，关联分析，这些手段用熟了没？
我们的业务大了，被同行记恨，被黑客敲诈，恶意用户横行，怎么保障业务安全？如何防DDOS，CSRF，跨站脚本攻击，DNS劫持？

Yslow地址：https://developer.yahoo.com/yslow/

性能优化的建议：
前端

提升网站性能对于网站的整体效益、用户体验、经济作用等多方面都意义重大。而我们网站的性能对于搭建高性能的网站由多方面因素共同作用。我们应从整个页面的设计、代码的搭建等基础层面即进行考量。从基础角度考虑网站的性能。
[edit] 要求

1.减少dom节点
2.减少图片使用
3.减少js客户端执行
4.减少请求资源
5.对于页面内按钮图标的需求变更加v的css引用图片定时清理版本号
6.对于height超过50，同时width超过50的图片，需要在html中指定height和width属性
7.减少无效字符
//图片异步加载。  才开始要设置一个图片的默认图，一般是白色的
$("img").lazyload({
  effect:"fadeIn",
  failurelimit:50,
  threshold:300,
  skip_invisible : false
});
[edit] 方法

1.首屏页面直接用通栏，避免左右结构
2.首屏以下页面内容异步请求，滚动触发加载
3.首屏以下涉及图片部分lazyload加载
4.不涉及在首屏加载的js，动态触发加载
5.第三方脚本，例如百度分享一类的，异步动态处理
6.Dom节点控制在1000行左右（产品设计需注意）
7.删除代码中非必要的空格，换行

[edit] php端
[edit] 要求

1。减少代码耦合，结构清晰，方便维护
2。减少cpu，内存，数据库，接口的依赖。

[edit] 方法

1．controller要短（能抽离到model的必须抽离）
2．重定向需要前置到controller中，禁止die的使用。
3．多使用静态化，redis 
4．正确使用缓存（imemcache）
5．ajax要单独action不要与别的action混在一起
6．尽量用单例，不要过多的new，占用内存


网站监控：
采用结构化的方法保存日志，在新建页面显示结果。

优化小组常用监控、分析工具：
http://phoenix.tuniu.org/wiki/%E4%BC%98%E5%8C%96%E5%B0%8F%E7%BB%84%E5%B8%B8%E7%94%A8%E7%9B%91%E6%8E%A7%E3%80%81%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7

Google - Hadoop 淘宝 

面试总结：http://blog.sunchangming.com/post/90339622537

数据先格式化在保存在memcache里面，防止数据超过1M

LVS + Keepalived + nginx，这里的LVS是干什么用的？ 我们要自己做页面监控，zabbix太不靠谱了，sla不准，我们自己出sla报表

array_pop() 函数删除数组中的最后一个元素。

按前后台分，按页面分。

LIXUN 下面用 pecl 安装扩展 pecl install memcached

CNZZ代码统计：
<script type="text/javascript">
var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cspan id='cnzz_stat_icon_5726564'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s17.cnzz.com/stat.php%3Fid%3D5726564' type='text/javascript'%3E%3C/script%3E"));
</script>

至于通讯方面,php有swoole这类的长连接server socket能做到一定的缓解，次一点的可以用rest接口，高并发node.js 都不是个事，根据项目而定。
至于什么nosql 负载均衡等等严格说跟语言没多少关系，所以还是看项目的资源来决定。
站在一个多年PHPER的角度，我只能告诉你：PHP做产品 demo易出，精品难寻。 

hadoop强处在于分布式存储及运算，mongodb则是一个json数据库。他们都能用map-reduce，hadoop是多台机器协同运算，mongodb则仅是单机多核运算。如果你只是想存储日志、分析日志之类，建议你看看你的场景，两种技术都可以做。

贝叶斯垃圾信息处理
http://www.ruanyifeng.com/blog/2011/08/bayesian_inference_part_two.html

Yii::app()->request->isPostRequest

报错的时候增加error的class
.error{border-color: #FF0000;box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(255, 0, 0, 0.6);outline: 0 none;}

hashtable 用过没，可以了解下，数量的增加等都会引起hash数据的重新散列

laravel之于php,就相当于rails至于ruby

preg_match("/^[1-9]\d*$/",$pvalue)

HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。

brforeAction中控制访问的 1M340

protected function beforeAction($action) {
    $filtersController = array (
                    'ajaxChannel',
    'picUpload',
    );

    $filtersModule = array (
                    'api' 
    );

    if (in_array ( $this->id, $filtersController ))
            return true;

    $log = new AdminLog ();
    $log->f_username = $this->userName;

    if ($this->module) {
            if (in_array ( $this->module->id, $filtersModule ))
                    return true;
            $log->f_yii_module = $this->module->id;
    }

    $log->f_yii_controller = $this->id;
    $log->f_yii_action = $action->getId ();
    $log->write ();
    return true;
}

\'
`f_updatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 自动记录更新时间

onkeyup="if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\D/g,'')}"

.form-horizontal .form-group .control-label,.form-horizontal .form-group>div{display:inline;float:left;} >表示只对第一个DIV起作用

union:联合的意思，即把两次或多次查询结果合并起来。

alt属性是一个用于网页语言HTML和XHTML、为输出纯文字的参数属性。它的作用是当HTML元素本身的物件无法被渲染时，就显示alt（替换）文字作为一种补救措施。

//服务器打印的时候
echo '<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />';
echo "<script type='text/javascript'>";
echo "alert('订单号不存在！');";
echo "history.go(-1);";
echo "</script>";

缓存的key被foreach循环掉，memcache的命中率

服务器响应有问题，可能是用nginx反向代理引起的。

is_file()、is_dir()、file_exists()这三个函数file_exists()一个函数既能判断目录存在与否又可以判断文件是否存在，但是它的执行效率要比其他两个差很多，所以建议大家：如果判断文件是否存在就用is_file()函数；如果判断目录是否存在就用is_dir()函数。

html_entity_decode() 函数把 HTML 实体转换为字符。strip_tags(),str_ireplace()大小写不敏感

使用ajax时，常常需要拼装input数据为'name=abc&sex=1'这种形式，用JQuery的serialize方法可以轻松的完成这个工作! 

seajs很简单，， 有点类似php的require 用了 Zepto.js
http://tuweia.cn/c/home/a/responsive

preg_match("/^\d*$/", $times)

JS 判断日期格式
function dateFormat(dateStr) {
    if (dateStr.length != 10) {
        alert("请填写正确的日期");
        return false;
    }
    //判断日期的格式。以yyyy-MM-dd为准
    var aryStr = new Array();
    if (dateStr.indexOf("/") == -1 && dateStr.indexOf("-") != -1) {
        aryStr = dateStr.split("-");
    } else if (dateStr.indexOf("/") != -1 && dateStr.indexOf("-") == -1) {
        aryStr = dateStr.split("/");
    } else {
        alert("日期字符串格式错误");
        return false;
    }
    //判断年份
    if (aryStr[0].length != 4) {
        alert("年份错误");
        return false;
    }
    //判断月份
    if (aryStr[1].length != 2 || ((1 > aryStr[1]) || (aryStr[1] > 12))) {
        alert("月份错误");
        return false;
    }
    //判断日
    if (aryStr[2].length != 2 || ((1 > aryStr[2]) || (aryStr[2] > 31))) {
        alert("日期错误");
        return false;
    }
    return true;
}

PHP相关时间转化
//全部 1-今天 2-本周 3-本月 4-最近3个月
        $region = Utils::intParamGet('region', 0, 1);
        //开始时间 //结束时间
        switch ($region) {
            case 1:
                $startTime = strtotime(date('Y-m-d 00:00:00'));
                $endTime = strtotime(date("Y-m-d 00:00:00", strtotime("+1 day")));
                break;
            case 2:
//                $startTime = date("Y-m-d H:i:s", mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y")));
//                $endTime = date("Y-m-d H:i:s", mktime(0, 0, 0, date("m"), date("d") - date("w") + 7, date("Y") + 1));
                $startTime = mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y"));
                $endTime = mktime(0, 0, 0, date("m"), date("d") - date("w") + 7, date("Y") + 1);
                break;
            case 3:
//                $startTime = date("Y-m-d H:i:s", mktime(0, 0, 0, date("m"), 1, date("Y")));
//                $endTime = date("Y-m-d H:i:s", mktime(0, 0, 0, date("m"), date("t"), date("Y") + 1));
                $startTime = mktime(0, 0, 0, date("m"), 1, date("Y"));
                $endTime = mktime(0, 0, 0, date("m"), date("t"), date("Y") + 1);
                break;
            case 4:
//                $startTime = date("Y-m-d H:i:s", mktime(0, 0, 0, date("m")-2, 1, date("Y")));
//                $endTime = date("Y-m-d H:i:s", mktime(0, 0, 0, date("m"), date("t"), date("Y") + 1));
                $startTime = mktime(0, 0, 0, date("m") - 2, 1, date("Y"));
                $endTime = mktime(0, 0, 0, date("m"), date("t"), date("Y") + 1);
                break;
            default:
                $startTime = Utils::intParamGet('startTime', '');
                $endTime = Utils::intParamGet('endTime', '');
                break;
        }


$("#btn4").click(function(){
$("#btn3").click();
}); 

throw new CHttpException(500, '支付单创建失败');

Linux 服务器上 找不到 url 在 httpd.conf 里面吧 deny改成all，然后加上 rewrite engine on之类的东西，也可以自己配置 vhost文件

crontab -e 修改linux脚本里面的内容
crontab -l 查看linux部署的脚本
date -R 显示当前时间

PHP语言虽然功能强大，但并不代表其没有缺点，比如：PHP在整数取余的时候有时会返回负数。其实这也算上PHP一个BUG吧。最主要是PHP是个弱类型语言.他内置了机器来判断用户的类型。但是机器毕竟是机器.也有判断出错的时候.就像上面.所以这时候我们就需要人工干预下。本文介绍解决PHP整数取余返回负数的问题的方法： $res = floatval(16244799483);
var_dump($res % 9999999); 我们看到结果还是错误的-5069794. 但是值得注意的是返回是一个int类型的. 详细思考了一下.PHP整数取余返回负数的问题是这样处理的. PHP取余默认为整数的. 而且当你定义$res = 16244799483; 其实就已经溢出了.所以要加上强制类型转换.变成float类型. 但是这样还不够.因为%这个取模计算还是针对整数的. 所以我们需要一个函数fmod.是针对float类型的. 所以最终PHP整数取余返回负数的解决办法为: $res = floatval(16244799483);
var_dump(fmod($res,9999999)); 这样我们就解决了PHP整数取余返回负数这个问题.:)
fmod() 函数返回除法的浮点数余数

header("Content-Type:text/html;charset=utf-8"); 


$.each(pnid,function(i, item){

})

JS 作用域的关系
(function(){

})()

header 之前不能有输出的

CAS单点登录sso
服务层，数据层 缓存管理 系统

linux 命令 top
netstat -pnt | grep :80 | wc -l

分区概念
分区针对不同的数据库，具有不同的特性。在这里专门针对MySQL数据库而言。在MySQL数据库里，分区这个概念是从mysql 5.1才开始提供的。不过目前只有在mysql advanced版本里才提供。
封装成中间件，监控

线上的 .svn目录要删除  通过apache/nginx禁止访问.svn目录

.svn 目录要删除  通过apache/nginx禁止访问.svn目录
tkd
lazyload
In.add('TN_common_init', {path: 'http://img.tuniucdn.com/j/2014071517/common/jquery-powerFloat.js,common/lazyloadnew.min.js', type: 'js', charset: 'utf-8'});

In('TN_common_init', function() {
     //图片异步加载。
    $("img").lazyload({
        effect: "fadeIn",
        failurelimit: 50,
        threshold: 300,
        skip_invisible: false
    });
});
直接在 函数的开始返回
根据status在sql里面过滤
首页 里面的 img lazyload

总结项目经验
 ip判断到所在地的
IP地址是指互联网协议地址（英语：Internet Protocol Address，又译为网际协议地址），是IP Address的缩写。IP地址是IP协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。目前还有些ip代理软件，但大部分都收费。

IP地址是一个32位的二进制数，通常被分割为4个“8位二进制数”（也就是4个字节）。IP地址通常用“点分十进制”表示成（a.b.c.d）的形式，其中，a,b,c,d都是0~255之间的十进制整数。例：点分十进IP地址（100.4.5.6），实际上是32位二进制数（01100100.00000100.00000101.00000110）。
http://phoenix.tuniu.org/wiki/HowTo-PHP_get_ip_location
http://phoenix.tuniu.org/wiki/howto-ip-convertor

solr Solr是一个独立的企业级搜索应用服务器，它对外提供类似于Web-service的API接口。用户可以通过http请求，向搜索引擎服务器提交一定格式的XML文件，生成索引；也可以通过Http Get操作提出查找请求，并得到XML格式的返回结果。

Structs

支持https了，但是有https的主机只能配置一个域名吗？因为https协议把host也加密了，服务器不知道host无法定位文件夹 SSL

HTTP1.1 包解析

记录接口失败的
还有错误日志的列表，要可以查看
刷所有的css

1.IP下单限制 2.下单日志表 3.慢查加监控
http://1.tuniu.com/bet/pay/cart?pid=1&pnoid=1&bet_amount=0 没有找到产品404
逻辑上一定存在的但是没存在 抛500

测试netscaler  netscaler是什么

svninfo 和 报错没有隐藏
YUI前端
document.ready JS引用顺序
http://jira.tuniu.org/browse/WEBS-3568

频率上线
订单号bigint 分表 慢查
手机号码不能修改
页面防刷/价格一定不能随便修改
抵用券ID 维护进去

javascript:alert(navigator.userAgent)
date_default_timezone_set('Asia/Shanghai'); 在代码里面设置时区

apache监听多个IP地址

int最大20多亿，unsigned int 40多亿，不是按位算的。
int  UNSIGNED 不用写11位

admin独立出来
M站后续迭代


•	接口类的组件应该怎么设计（个人观点误喷）
o	命令模式 (http://baike.baidu.com/view/1963264.htm?fr=aladdin)
	对命令进行封装，将发出命令的责任和执行命令的责任分割开
	请求本身成为一个对象
o	统一调度（轻松切换CURL或TSP）
o	统一监控（udplog）
o	参数对象化
•	网站三代接口组件

o	列表信息查询（支持各种筛选项过滤产品列表，轻松解决各类聚合请求）
	$solr = new PowerSolrService(); //新建solr
	$ror = new ror_service_category(); //新建参数对象
	$ror->poiId = 3922; //入参
	$ror->cityCode = 1602;
	$response = $solr->categoryQuery($ror); //调用方法
o	产品信息查询（迄今为止最靠谱的接口，没有之一）
•	招客宝接口组件
o	产品信息查询（轻松支持首页，频道页，分类页，搜索页的招客宝数据查询）
	$bbService = new PowerBBService();
	$product = new bb_service_product_showproduct();
	$product->showDate = date('Y-m-d');
	//index_chosen_”blockId”_”tabId”(首页)，class_recommend(分类页)，search_complex(搜索页)，brand_zone(品牌专区)，special_subject(专题页)
	$product->adKey = "";
	$product->startCityCode = 200;
	$bbList = $bbService->getProduct($product);

传送门：http://wiki.tuniu.org/pages/viewpage.action?pageId=10523389

http://wiki.tuniu.org/pages/viewpage.action?pageId=10523389

php函数getenv()与putenv()和$_SERVER
防止刷新
<?php
 session_start();
 $_SESSION['num'] = 0;
 if(isset($_POST['action'] && $_POST['action']=='submit')){
  if($_SESSION['num'] == 0){
   echo '<a href="'.$_SERVER['PHP_SELF'].'">'请再次尝试</a>;'
   $_SESSION['num'] = 1;
  }else{
   echo '您已经提交过了，请不要重复提交';
  }
 }
?>

http://product.dangdang.com/71052.html

//白写的代码
$ip = $_SERVER["REMOTE_ADDR"];
$orderCountKey = MemcacheKeyUtil::getCacheKey($ip.'#'.Yii::app()->tuniuUser->userid);
$orderCount = Yii::app()->memcache->get($orderCountKey);
if($orderCount >= 2){
    $locationUrl = Yii::app()->params['host']['tuniu'].'/refreshCode?lastUrl=http://1.tuniu.com';
    header('Location:'.$locationUrl);
    exit;
}

//重复下单的缓存
Yii::app()->memcache->set($orderCountKey, $orderCount+1, 600);

脚本运行邮件监控

//把字符转成html实体，防止页面输出的时候被执行  htmlentities会转义中文
$name = htmlspecialchars(Yii::app()->request->getParam('username'), ENT_QUOTES);
if(strlen($name) > 20 ){
   $name = mb_substr($name, 0, 20, 'utf-8'); 
}

security.php
//防止xss攻击
require_once dirname(__FILE__).'/protected/components/Security.php';
//Security::sqlInjectionDefender();
Security::headerCLeaner();
Security::getXssSafeParams($_POST);
Security::getXssSafeParams($_GET);
Security::getXssSafeParams($_REQUEST);
Security::getXssSafeParams($_COOKIE);

发布之前注意sql有没有执行

编辑器的列模式


<?php
$switchCityStr = '<div id="con"><ul id="tags"><li class="selectTag"><a href="javascript:void(0)" onclick="selectTag(\'tagContent5\',this)">热门城市</a></li>';
foreach ($this->nav_top['cityLetter'] as $key => $value) {
    if ($key) {
        $letterArr = array_keys($value);
        $switchCityStr .= '<li><a href="javascript:void(0)" onclick="selectTag(\'tagContent' . $key . '\',this)">' . implode('', $letterArr) . '</a> </li>';
    }
}
$switchCityStr .='</ul><div id="tagContent">';
$switchCityStr .= '<div id="tagContent5" class="tagContent selectTag">';


$districtArray = array('华北' => array(), '华东' => array(), '华南' => array(), '华中' => array(), '西南' => array(),
    '西北' => array(), '东北' => array());
//格式化出发城市
foreach ($this->nav_top['Hot'] as $hotCity) {
    if (in_array($hotCity['districtName'], array_keys($districtArray))) {
        $districtArray[$hotCity['districtName']][] = $hotCity;
    }
}

foreach ($districtArray as $dkey => $dHotCity) {
    $switchCityStr .= '<div class="line"><div class="line_left">' . $dkey . '</div><div class="line_right">';
    foreach ($dHotCity as $_hcity) {
        if ($this->city_code !== $_hcity['code']) {
            $switchCityStr .= '<a href="' . $_hcity['url'] . '"  onclick="_gaq.push([\'_trackEvent\', \'home_' . $letter . '\',\'city\',\'zy_' . $_hcity['name'] . '\']);">' . $_hcity['name'] . '<a>';
        } else {
            $switchCityStr .= "<a href='javascript:void(0);' class='shixiao' rel='nofollow'  onclick='return false;'>" . $_hcity['name'] . "</a>";
        }
    }
    $switchCityStr .= '</div></div>';
}

foreach ($this->nav_top['cityLetter'] as $key => $value) {
    if ($key) {
        $curent = '';
        $switchCityStr .= '<div id="tagContent' . $key . '" class="tagContent ' . $curent . '">';
        foreach ($value as $_letter => $_citys) {
            $switchCityStr .= '<div class="line"><div class="line_left">' . $_letter . '</div><div class="line_right">';
            foreach ($_citys as $_city) {
                if ($this->city_code != $_city['code']) {
                    $switchCityStr .= '<a href="' . $_city['url'] . '"  onclick="_gaq.push([\'_trackEvent\', \'home_' . $letter . '\',\'city\',\'fzy_' . $_city['name'] . '\']);">' . $_city['name'] . '<a>';
                } else {
                    $switchCityStr .= "<a href='javascript:void(0);' class='shixiao' rel='nofollow' onclick='return false;'>" . $_city['name'] . "</a>";
                }
            }
            $switchCityStr .= '</div></div>';
        }
        $switchCityStr .= '</div>';
    }
}
?>


tanjunqing(谭俊青-61178-2F) 17:19:17
[Thu Nov 06 15:57:43 2014] [error] [client 172.30.122.88] PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 82 bytes) in /opt/tuniu/www/html/bet/framework/db/CDbCommand.php on line 657, referer: http://1.tuniu.com/u/
tanjunqing(谭俊青-61178-2F) 17:26:03
172.30.116.118 - - [05/Nov/2014:11:04:58 +0800] "GET / HTTP/1.1" 500 420 "-" "Opera/9.80 (Windows; Opera Mobi/35779; U; zh-cn) Presto/2.10.254 Version/12.00"

修改公共同步的代码
这个需求的启示
跟城市有关的页面 url规则做成统一的，方便修改
另外 出发城市存在 cookie里面好吗？

2.系统有很多不用的垃圾代码
如果不用了 是否应该 直接删除或者注释掉

3.改成可配置的，每个页面都有自己的page code 或者 pagetype，那些是可以公用的那些不能公用。


有趣的网站 武汉易橙网络科技有限公司 2shoujie.com
阅后即焚的ＡＰＰ

git config
git init
git clone git@github.com:wangchongan/weixin-robot-java.git

我是按照这里http://www.howtoforge.com/apache_php_mysql_on_centos_6.5_lamp来装的apache和php

linkedin 职场人的社交网站
万得资讯 国泰君安

关于书籍：

原则：只看国外的，只用Google，只用英文. 一般用图灵的技术书籍。

推荐书籍：

    入门篇：《PHP和MySQL Web开发(第四版)》
    进阶篇：《深入PHP 面向对象、模式与实践》
    钻研篇：《代码大全》《重构 改善既有代码的设计》《程序员修炼之道 从小工到专家》《日月神话》，其他：数据结构与算法、设计模式、安全、最佳实践。

配置表
开奖4个数据源  腾讯彩票，淘宝彩票

1.收入 等需求 自己做一个。
2.BI对接 不用对接

if (!isset($foo{5}))

服务器时间 只显示已中奖的用户 统计总共参与的人次，统计平均客单价 短信接口配置一下就可以了

根据订单号查产品id，再通过BOH查产品类型，这个可以试试 接口可能有问题
多文件上传

订单推财务的
导出EXCEL的

这个专案名称就是PEAR，其实是PHP Extension and Application Repository的缩写，意即「PHP的延续与应用程式库」，简单的說，PEAR其实是一个PHP的程式库。 
