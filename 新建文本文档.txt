/opt/tuniu/apache2/bin/apachectl restart linux下apache重启的命令

流量本身就是钱，导到那里都是赚钱，为什么要导到你那边呢

创业的时候要多用产品的思维去想而不是程序员的思维

JS只能输入正整数<input id="lowPrice" class="priTxt" type="text" method="lowPrice" onkeyup="if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\D/g,'')}">

业务增长，给你的网站带来用户和流量，那随之机器负载就上去了，要不要做监控？要不要做负载均衡？
用户复杂了，要不要做多浏览器兼容？要不要做CDN？数据量大了，要不要做分布？垂直分还是横向分？
系统瓶颈在哪里？优化IO还是优化网络？整个系统复杂度上去了，成本怎么降低？你的能力在哪里？
收入不变，算法优化一下成本降低20%，老板高不高兴？给不给你加工资？成本类的潜力挖掘殆尽，那收入类的挖掘完了没有？
我们知不知道用户喜欢我们网站上的什么功能？用户喜欢的是不是有价值的？这些有价值的我们能不能做？统计，分析，转化，挖掘，关联分析，这些手段用熟了没？
我们的业务大了，被同行记恨，被黑客敲诈，恶意用户横行，怎么保障业务安全？如何防DDOS，CSRF，跨站脚本攻击，DNS劫持？

Yslow地址：https://developer.yahoo.com/yslow/

性能优化的建议：
前端

提升网站性能对于网站的整体效益、用户体验、经济作用等多方面都意义重大。而我们网站的性能对于搭建高性能的网站由多方面因素共同作用。我们应从整个页面的设计、代码的搭建等基础层面即进行考量。从基础角度考虑网站的性能。
[edit] 要求

1.减少dom节点
2.减少图片使用
3.减少js客户端执行
4.减少请求资源
5.对于页面内按钮图标的需求变更加v的css引用图片定时清理版本号
6.对于height超过50，同时width超过50的图片，需要在html中指定height和width属性
7.减少无效字符

[edit] 方法

1.首屏页面直接用通栏，避免左右结构
2.首屏以下页面内容异步请求，滚动触发加载
3.首屏以下涉及图片部分lazyload加载
4.不涉及在首屏加载的js，动态触发加载
5.第三方脚本，例如百度分享一类的，异步动态处理
6.Dom节点控制在1000行左右（产品设计需注意）
7.删除代码中非必要的空格，换行

[edit] php端
[edit] 要求

1。减少代码耦合，结构清晰，方便维护
2。减少cpu，内存，数据库，接口的依赖。

[edit] 方法

1．controller要短（能抽离到model的必须抽离）
2．重定向需要前置到controller中，禁止die的使用。
3．多使用静态化，redis 
4．正确使用缓存（imemcache）
5．ajax要单独action不要与别的action混在一起
6．尽量用单例，不要过多的new，占用内存


网站监控：
采用结构化的方法保存日志，在新建页面显示结果。

优化小组常用监控、分析工具：
http://phoenix.tuniu.org/wiki/%E4%BC%98%E5%8C%96%E5%B0%8F%E7%BB%84%E5%B8%B8%E7%94%A8%E7%9B%91%E6%8E%A7%E3%80%81%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7

Google - Hadoop 淘宝 

面试总结：http://blog.sunchangming.com/post/90339622537
